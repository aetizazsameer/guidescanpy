version: "3.8"

services:
  db:
    container_name: guidescan_db
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER}

  init_db:
    container_name: guidescan_init_db
    build: .
    depends_on:
      db:
        condition: service_healthy
    command: bash -c "
      guidescanpy init-db
      && wget -O data/raw/sacCer3.gtf.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/146/045/GCF_000146045.2_R64/GCF_000146045.2_R64_genomic.gtf.gz
      && wget -O data/raw/sacCer3 https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/146/045/GCF_000146045.2_R64/GCF_000146045.2_R64_assembly_structure/Primary_Assembly/assembled_chromosomes/chr2acc
      && guidescanpy add-organism sacCer3 data/raw/sacCer3.gtf.gz data/raw/sacCer3
      "
    environment:
      - CELERY_BROKER=redis://guidescan_redis
      - CELERY_BACKEND=redis://guidescan_redis
      - POSTGRES_HOST=guidescan_db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BAM_PATH=/bams/
      - INDEX_PATH=/indices/

  redis:
    container_name: guidescan_redis
    image: redis:4.0.5-alpine
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    container_name: guidescan_celery
    build: .
    image: guidescan
    depends_on:
      redis:
        condition: service_healthy
    command: python -m celery -A guidescanpy.tasks.app worker -l INFO
    environment:
      - CELERY_BROKER=redis://guidescan_redis
      - CELERY_BACKEND=redis://guidescan_redis
      - POSTGRES_HOST=guidescan_db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BAM_PATH=/bams/
      - INDEX_PATH=/indices/
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    volumes:
      - ${BAM_PATH}:/bams/
      - ${INDEX_PATH}:/indices/

  flower:
    container_name: guidescan_flower
    build: .
    image: guidescan
    environment:
      - CELERY_BROKER=redis://guidescan_redis
      - CELERY_BACKEND=redis://guidescan_redis
      - POSTGRES_HOST=guidescan_db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BAM_PATH=/bams/
      - INDEX_PATH=/indices/
    ports:
      - "5555:5555"
    command: python -m celery -A guidescanpy.tasks.app flower --port=5555
    depends_on:
      - celery
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    volumes:
      - ${BAM_PATH}:/bams/
      - ${INDEX_PATH}:/indices/

  app:
    container_name: guidescan_app
    build: .
    image: guidescan_app
    depends_on:
      - init_db
    ports:
      - "5001:5001"
    command: python -m guidescanpy web
    environment:
      - CELERY_BROKER=redis://guidescan_redis
      - CELERY_BACKEND=redis://guidescan_redis
      - POSTGRES_HOST=guidescan_db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BAM_PATH=/bams/
      - INDEX_PATH=/indices/
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    volumes:
      - ${BAM_PATH}:/bams/
      - ${INDEX_PATH}:/indices/
